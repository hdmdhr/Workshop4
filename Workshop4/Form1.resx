<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPackage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>